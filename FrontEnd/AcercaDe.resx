<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>